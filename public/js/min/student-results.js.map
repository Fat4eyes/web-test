{"version":3,"sources":["results.js"],"names":[],"mappingsfile":"student-results.js","sourcesContent":["$(document).ready(function(){\r\n\r\n    var resultsViewModel = function(){\r\n        return new function(){\r\n            var self = this;\r\n            initializeViewModel.call(self, {page: menu.student.results});\r\n\r\n            self.initial = {\r\n                results: ko.observableArray([]),\r\n                disciplines: ko.observableArray([])\r\n            };\r\n\r\n            self.filter = {\r\n                discipline: ko.observable(),\r\n                state: ko.observable(testCheckedStatus.all),\r\n\r\n                clear: function(){\r\n                    self.filter.discipline(null).state(testCheckedStatus.all);\r\n                }\r\n            };\r\n\r\n            self.current = {\r\n                results: ko.computed(function() {\r\n                    var initial = self.initial.results();\r\n                    return ko.utils.arrayFilter(initial, function(item) {\r\n                        switch(self.filter.state()){\r\n                            case testCheckedStatus.all:\r\n                                return true;\r\n                                break;\r\n                            case testCheckedStatus.done:\r\n                                return item.mark() !== null;\r\n                                break;\r\n                            case testCheckedStatus.not:\r\n                                return item.mark() === null;\r\n                                break;\r\n                            default:\r\n                                return true;\r\n                        }\r\n                    });\r\n                }),\r\n                id: ko.observable(0),\r\n                result: ko.observable(),\r\n                details: ko.observable(null),\r\n                question: ko.observable(null),\r\n                markScale: ko.observable(100)\r\n            };\r\n\r\n\r\n\r\n            self.actions = {\r\n                show: {\r\n                    result: function(data) {\r\n                        var id = self.current.id;\r\n                        self.current.details(null);\r\n\r\n                        if (data.id() === id()) {\r\n                            id(0);\r\n                            return;\r\n                        }\r\n\r\n                        self.current.result(data);\r\n                        id(data.id());\r\n                        self.get.result();\r\n                    },\r\n                    question: function(data){\r\n                        self.current.question(data);\r\n                        commonHelper.modal.open('#question-details-modal');\r\n                    }\r\n                }\r\n            };\r\n\r\n            self.get = {\r\n                disciplines: function(){\r\n                    $ajaxget({\r\n                        url: '/api/disciplines/testresults',\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.initial.disciplines(data());\r\n                        }\r\n                    });\r\n                },\r\n                results: function(){\r\n                    $ajaxget({\r\n                        url: '/api/results/discipline/' + self.filter.discipline().id(),\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.initial.results(data());\r\n                        }\r\n                    });\r\n                },\r\n                result: function(){\r\n                    $ajaxget({\r\n                        url: '/api/results/show/' + self.current.id(),\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            if (data.test.type() === types.test.study.id){\r\n                                self.current.details(data);\r\n                            }\r\n                        }\r\n                    });\r\n                },\r\n                markScale: function(){\r\n                    $ajaxget({\r\n                        url: '/api/settings/get/maxMarkValue',\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.current.markScale(data.value());\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n            self.get.disciplines();\r\n            self.get.markScale();\r\n\r\n            self.filter.discipline.subscribe(function(value){\r\n                if (value){\r\n                    self.get.results();\r\n                }\r\n                else{\r\n                    self.initial.results([]);\r\n                }\r\n            });\r\n\r\n            return returnStandart.call(self);\r\n        };\r\n    };\r\n\r\n    ko.applyBindings(resultsViewModel());\r\n});"]}