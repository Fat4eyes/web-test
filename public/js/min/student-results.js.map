{"version":3,"sources":["results.js"],"names":[],"mappingsfile":"student-results.js","sourcesContent":["$(document).ready(function(){\n\n    var resultsViewModel = function(){\n        return new function(){\n            var self = this;\n            initializeViewModel.call(self, {page: menu.student.results});\n\n            self.initial = {\n                results: ko.observableArray([]),\n                disciplines: ko.observableArray([])\n            };\n\n            self.filter = {\n                discipline: ko.observable(),\n                state: ko.observable(testCheckedStatus.all),\n\n                clear: function(){\n                    self.filter.discipline(null).state(testCheckedStatus.all);\n                }\n            };\n\n            self.current = {\n                results: ko.computed(function() {\n                    var initial = self.initial.results();\n                    return ko.utils.arrayFilter(initial, function(item) {\n                        switch(self.filter.state()){\n                            case testCheckedStatus.all:\n                                return true;\n                                break;\n                            case testCheckedStatus.done:\n                                return item.mark() !== null;\n                                break;\n                            case testCheckedStatus.not:\n                                return item.mark() === null;\n                                break;\n                            default:\n                                return true;\n                        }\n                    });\n                }),\n                id: ko.observable(0),\n                result: ko.observable(),\n                details: ko.observable(null),\n                question: ko.observable(null),\n                markScale: ko.observable(100)\n            };\n\n\n\n            self.actions = {\n                show: {\n                    result: function(data) {\n                        var id = self.current.id;\n                        self.current.details(null);\n\n                        if (data.id() === id()) {\n                            id(0);\n                            return;\n                        }\n\n                        self.current.result(data);\n                        id(data.id());\n                        self.get.result();\n                    },\n                    question: function(data){\n                        self.current.question(data);\n                        commonHelper.modal.open('#question-details-modal');\n                    }\n                }\n            };\n\n            self.get = {\n                disciplines: function(){\n                    $ajaxget({\n                        url: '/api/disciplines/testresults',\n                        errors: self.errors,\n                        successCallback: function(data){\n                            self.initial.disciplines(data());\n                        }\n                    });\n                },\n                results: function(){\n                    $ajaxget({\n                        url: '/api/results/discipline/' + self.filter.discipline().id(),\n                        errors: self.errors,\n                        successCallback: function(data){\n                            self.initial.results(data());\n                        }\n                    });\n                },\n                result: function(){\n                    $ajaxget({\n                        url: '/api/results/show/' + self.current.id(),\n                        errors: self.errors,\n                        successCallback: function(data){\n                            if (data.test.type() === types.test.study.id){\n                                self.current.details(data);\n                            }\n                        }\n                    });\n                },\n                markScale: function(){\n                    $ajaxget({\n                        url: '/api/settings/get/maxMarkValue',\n                        errors: self.errors,\n                        successCallback: function(data){\n                            self.current.markScale(data.value());\n                        }\n                    });\n                }\n            };\n            self.get.disciplines();\n            self.get.markScale();\n\n            self.filter.discipline.subscribe(function(value){\n                if (value){\n                    self.get.results();\n                }\n                else{\n                    self.initial.results([]);\n                }\n            });\n\n            return returnStandart.call(self);\n        };\n    };\n\n    ko.applyBindings(resultsViewModel());\n});"],"sourceRoot":"/source/"}