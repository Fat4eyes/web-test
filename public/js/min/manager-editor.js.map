{"version":3,"sources":["editor.js"],"names":[],"mappingsfile":"manager-editor.js","sourcesContent":["$(document).ready(function () {\n    var editorViewModel = function () {\n        return new function () {\n            var self = this;\n\n            self.section = ko.observable({\n                id: ko.observable(0),\n                name: ko.observable(''),\n                content: ko.observable(''),\n                disciplineId: ko.observable(0)\n            });\n            self.page = ko.observable(menu.admin.disciplines);\n            self.errors = errors();\n            self.user = new user();\n            self.user.read(self.errors);\n            self.theme = ko.observable(null);\n\n            self.mode = ko.observable('none');\n            self.text = ko.observable('');\n\n\n            self.getSection = function () {\n                var currentUrl = window.location.href;\n                var urlParts = currentUrl.split('/');\n                var urlNewSection = urlParts[urlParts.length - 3];\n\n                if (urlNewSection != 'new') {\n                    self.mode('edit');\n                    var sectionId = +urlParts[urlParts.length-1];\n                    var url = '/api/sections/' + sectionId;\n\n\n                    $.get(url, function(response){\n                        var result = ko.mapping.fromJSON(response);\n                        if (result.Success()){\n                            self.section()\n                                .id(result.Data.id())\n                                .name(result.Data.name())\n                                .content(result.Data.content())\n                                .disciplineId(result.Data.disciplineId());\n\n                            if (ko.isObservable(result.Data.theme))\n                                self.theme(null);\n                            else self.theme(result.Data.theme);\n                            return;\n                        }\n                        self.errors.show(result.Message());\n                    });\n\n                }\n                else{\n                    self.mode('create');\n                }\n            };\n\n           self.getSection();\n\n           self.toggleModal = function(selector, action){\n               $(selector).arcticmodal(action);\n           };\n\n           self.create = function () {\n               var currentUrl = window.location.href;\n               var urlParts = currentUrl.split('/');\n               var disciplineId = +urlParts[urlParts.length - 2];\n               var themeId = +urlParts[urlParts.length - 1];\n               if (themeId === 0) themeId = null;\n\n               var section = {\n                   name: self.section().name(),\n                   content: CKEDITOR.instances.editor.getData()\n               };\n\n               var json = JSON.stringify({section: section, themeId: themeId, disciplineId: disciplineId});\n               var url = '/api/sections/create';\n\n               $.post(url, json, function(response){\n                   var result = ko.mapping.fromJSON(response);\n                   if (result.Success()){\n                       self.text(\"Раздел был успешно создан!\");\n                       self.toggleModal('#cancel-modal', '');\n                       setTimeout(function () {\n                           window.location.href = '/admin/disciplines/';\n                       }, 1500);\n                       return;\n                   }\n                   self.errors.show(result.Message());\n               });\n\n           };\n           self.update = function () {\n               var section = {\n                   id: self.section().id(),\n                   name: self.section().name(),\n                   content: CKEDITOR.instances.editor.getData()\n               };\n\n               var disciplineId = self.section().disciplineId();\n\n               if (self.theme() != null)\n                   var themeId = self.theme().id();\n               else themeId = null;\n\n\n               var json = JSON.stringify({section: section, themeId: themeId, disciplineId: disciplineId});\n               var url = '/api/sections/update';\n\n               $.post(url, json, function(response){\n                   var result = ko.mapping.fromJSON(response);\n                   if (result.Success()){\n                       self.text(\"Раздел был успешно изменен!\");\n                       self.toggleModal('#cancel-modal', '');\n                       setTimeout(function () {\n                           window.location.href = '/admin/disciplines/';\n                       }, 1500);\n                       return;\n                   }\n                   self.errors.show(result.Message());\n               });\n\n           };\n\n           self.approve = function () {\n               if(self.mode() === 'create') {\n                   self.create();\n               }\n               else if(self.mode() === 'edit'){\n                   self.update();\n               }\n           };\n\n           self.cancel = function () {\n               window.location.href = '/admin/disciplines/';\n           };\n\n\n            return {\n                page: self.page,\n                user: self.user,\n                section : self.section,\n                approve: self.approve,\n                text: self.text,\n                cancel: self.cancel,\n                errors: self.errors\n            }\n        };\n    };\n\n    ko.applyBindings(editorViewModel());\n});\n"],"sourceRoot":"/source/"}