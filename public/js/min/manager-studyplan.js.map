{"version":3,"sources":["studyplan.js"],"names":[],"mappingsfile":"manager-studyplan.js","sourcesContent":["$(document).ready(function () {\r\n    var studyplanViewModel = function () {\r\n        return new function () {\r\n            var self = this;\r\n\r\n            initializeViewModel.call(self, {\r\n                page: menu.admin.main,\r\n                mode: true\r\n            });\r\n\r\n\r\n            self.initial = {\r\n                unUrlPlanId: function(){\r\n                    var url = window.location.href;\r\n                    var id = +url.substr(url.lastIndexOf('/')+1);\r\n                    if ($.isNumeric(id)){\r\n                        self.current.planId(id);\r\n                        self.get.disciplines();\r\n                        return;\r\n                    }\r\n                    self.errors.show('Учебный план не определен');\r\n                    setTimeout(function(){\r\n                        window.location.href = '/admin/main';\r\n                    }, 5000);\r\n                },\r\n                disciplines: ko.observableArray([]),\r\n                selection: ko.observable(null).extend({\r\n                    required: true\r\n                })\r\n            };\r\n            self.filter = {\r\n                discipline: ko.observable(''),\r\n                clear: function(){\r\n                    self.filter.discipline('');\r\n                }\r\n            };\r\n            self.current = {\r\n                disciplines: ko.observableArray([]),\r\n                discipline: ko.validatedObservable({\r\n                    id: ko.observable(0),\r\n                    startSemester: ko.observable(0).extend({\r\n                        required: true,\r\n                        min: 1,\r\n                        max: 10,\r\n                        number: true\r\n                    }),\r\n                    semestersCount: ko.observable(0).extend({\r\n                        required: true,\r\n                        min: 1,\r\n                        max: 10,\r\n                        number: true\r\n                    }),\r\n                    hours: ko.observable(0).extend({\r\n                        required: true,\r\n                        min: 1,\r\n                        max: 10000,\r\n                        number: true\r\n                    }),\r\n                    hasProject: ko.observable(true),\r\n                    hasExam: ko.observable(true),\r\n                    discipline: ko.observable(''),\r\n                    disciplineId: ko.observable(0)\r\n                }),\r\n                planId: ko.observable()\r\n            };\r\n            self.alter = {\r\n                stringify: function(){\r\n                  var discipline = ko.mapping.toJS(self.current.discipline);\r\n                  if (self.mode() === state.create) delete discipline.id;\r\n                  return JSON.stringify({\r\n                      disciplinePlan: discipline,\r\n                      studyPlanId: self.current.planId(),\r\n                      disciplineId: self.current.discipline().disciplineId()\r\n                  })\r\n              },\r\n                fill: function(d){\r\n                  self.current.discipline().id(d.id()).hours(d.hours())\r\n                      .startSemester(d.startSemester()).semestersCount(d.semestersCount())\r\n                      .hasProject(d.hasProject()).hasExam(d.hasExam())\r\n                      .discipline(d.discipline()).disciplineId(d.disciplineId());\r\n                },\r\n                empty: function(){\r\n                    self.current.discipline().id(0).hours('')\r\n                        .startSemester('').semestersCount('')\r\n                        .hasProject(true).hasExam(true)\r\n                        .discipline('').disciplineId(0);\r\n                }\r\n            };\r\n            self.actions = {\r\n                show: function(data){\r\n                    var isCurrent = self.current.discipline().id() === data.id();\r\n                    if (isCurrent){\r\n                        self.alter.empty();\r\n                        self.mode(state.none);\r\n                        return;\r\n                    }\r\n                    self.alter.fill(data);\r\n                    self.mode(state.info);\r\n                },\r\n                start: {\r\n                    create: function(){\r\n                        self.mode() === state.create\r\n                            ? self.mode(state.none)\r\n                            : self.mode(state.create);\r\n                        self.alter.empty();\r\n                        commonHelper.buildValidationList(self.validation);\r\n                    },\r\n                    update: function(){\r\n                        self.mode(state.update);\r\n                        commonHelper.buildValidationList(self.validation);\r\n                    },\r\n                    remove: function(){\r\n                        self.mode(state.remove);\r\n                        commonHelper.modal.open('#remove-discipline-plan-modal');\r\n                    }\r\n                },\r\n                end: {\r\n                    update: function(){\r\n                        self.current.discipline.isValid()\r\n                            ? self.post.discipline()\r\n                            : self.validation[$('[accept-validation]').attr('id')].open();\r\n                    },\r\n                    remove: function(){\r\n                        self.post.removal();\r\n                    }\r\n                },\r\n                cancel: function(){\r\n                    if (self.mode() === state.create){\r\n                        self.alter.empty();\r\n                        self.mode(state.none);\r\n                    }\r\n                    self.mode(state.info);\r\n                },\r\n                switchExam: {\r\n                    on: function(data){\r\n                        data.hasExam(true);\r\n                    },\r\n                    off: function(data){\r\n                        data.hasExam(false);\r\n                    }\r\n                },\r\n                switchProject: {\r\n                    on: function(data){\r\n                        data.hasProject(true);\r\n                    },\r\n                    off: function(data){\r\n                        data.hasProject(false);\r\n                    }\r\n                },\r\n            };\r\n            self.get = {\r\n                fullList: function(){\r\n                    var requestOptions = {\r\n                        url: '/api/disciplines/',\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.initial.disciplines(data());\r\n                        }\r\n                    };\r\n                    $ajaxget(requestOptions);\r\n                },\r\n                disciplines: function(){\r\n                    var name = self.filter.discipline() ? '&name=' + self.filter.discipline() : '';\r\n                    var url = '/api/plan/discipline/show' +\r\n                        '?studyplan=' + self.current.planId() + name;\r\n\r\n                    var requestOptions = {\r\n                        url: url,\r\n                        errors: self.errors,\r\n                        data: null,\r\n                        successCallback: function(data){\r\n                            self.current.disciplines(data.data());\r\n                        }\r\n                    };\r\n                    $ajaxpost(requestOptions);\r\n                }\r\n            };\r\n            self.post = {\r\n                discipline: function(){\r\n                    var requestOptions = {\r\n                        url: self.mode() === state.create ? '/api/plan/discipline/create' : '/api/plan/discipline/update',\r\n                        data: self.alter.stringify(),\r\n                        errors: self.errors,\r\n                        successCallback: function(){\r\n                            self.mode(state.none);\r\n                            self.alter.empty();\r\n                            self.initial.selection(null);\r\n                            self.get.disciplines();\r\n                        }\r\n                    };\r\n                    $ajaxpost(requestOptions);\r\n                },\r\n                removal: function(){\r\n                    var url = '/api/plan/discipline/delete/' + self.current.discipline().id();\r\n                    var requestOptions = {\r\n                        url: url,\r\n                        data: null,\r\n                        errors: self.errors,\r\n                        successCallback: function(){\r\n                            self.alter.empty();\r\n                            self.mode(state.none);\r\n                            self.get.disciplines();\r\n                        }\r\n                    };\r\n                    $ajaxpost(requestOptions);\r\n                }\r\n            };\r\n\r\n\r\n            self.initial.unUrlPlanId();\r\n            self.get.fullList();\r\n\r\n\r\n\r\n            self.initial.selection.subscribe(function(value){\r\n                if (value){\r\n                    self.current.discipline().disciplineId(value.id());\r\n                    self.current.discipline().discipline(value.name());\r\n                    return;\r\n                }\r\n                self.current.discipline().disciplineId(0);\r\n                self.current.discipline().discipline('');\r\n            });\r\n            self.filter.discipline.subscribe(function(){\r\n                self.mode(state.none);\r\n                self.get.disciplines();\r\n            });\r\n\r\n            return returnStandart.call(self);\r\n        };\r\n    };\r\n\r\n    ko.applyBindings(studyplanViewModel());\r\n});\r\n"]}