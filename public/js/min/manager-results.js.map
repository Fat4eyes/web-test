{"version":3,"sources":["results.js"],"names":[],"mappingsfile":"manager-results.js","sourcesContent":["$(document).ready(function(){\r\n    var resultsViewModel = function(){\r\n        return new function(){\r\n            var self = this;\r\n\r\n            initializeViewModel.call(self, {\r\n                page: menu.admin.results\r\n            });\r\n\r\n            self.theme = ko.observable({});\r\n            self.settings = ko.observable(null);\r\n\r\n            self.current = {\r\n                results: ko.observableArray([]),\r\n                markScale: ko.observable(100)\r\n            };\r\n            self.filter = {\r\n                profile: ko.observable(),\r\n                discipline: ko.observable(),\r\n                group: ko.observable(),\r\n                test: ko.observable(),\r\n\r\n                profiles: ko.observableArray([]),\r\n                disciplines: ko.observableArray([]),\r\n                groups: ko.observableArray([]),\r\n                tests: ko.observableArray([]),\r\n\r\n                set: {\r\n                    profile: function(){\r\n                        var id = self.settings().result_profile;\r\n                        if (!id) return;\r\n                        $.each(self.filter.profiles(), function(i, item){\r\n                            if (item.id() == id()){\r\n                                self.filter.profile(item);\r\n                            }\r\n                        });\r\n                    },\r\n                    discipline: function(){\r\n                        var id = self.settings().result_discipline;\r\n                        if (!id) return;\r\n                        $.each(self.filter.disciplines(), function(i, item){\r\n                            if (item.id() == id()){\r\n                                self.filter.discipline(item);\r\n                            }\r\n                        });\r\n                    },\r\n                    group: function(id){\r\n                        var id = id || self.settings().result_group;\r\n                        if (!id) return;\r\n                        $.each(self.filter.groups(), function(i, item){\r\n                            if (item.id() == id()){\r\n                                self.filter.group(item);\r\n                            }\r\n                        });\r\n                    },\r\n                    test: function(){\r\n                        var id = self.settings().result_test;\r\n                        if (!id) return;\r\n                        $.each(self.filter.tests(), function(i, item){\r\n                            if (item.id() == id()){\r\n                                self.filter.test(item);\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                clear: function(){\r\n                    self.filter.profile() ? self.filter.profile(null) : null;\r\n                    self.filter.group() ? self.filter.group(null) : null;\r\n                    self.filter.discipline() ? self.filter.discipline(null) : null;\r\n                    self.filter.test() ? self.filter.test(null) : null;\r\n                    self.settings(null);\r\n                }\r\n            };\r\n\r\n\r\n            self.actions = {\r\n                show: function(data){\r\n                    window.location.href = '/admin/result/' + data.id();\r\n                },\r\n                overall: function(){\r\n\r\n                    self.filter.profile() ? self.post.settings({'overall_profile': self.filter.profile().id()}) : null;\r\n                    self.filter.discipline() ? self.post.settings({'overall_discipline': self.filter.discipline().id()}): null;\r\n                    self.filter.group() ? self.post.settings({'overall_group': self.filter.group().id()}) : null;\r\n                    window.location.href = '/admin/overallresults';\r\n                }\r\n            };\r\n\r\n            self.get = {\r\n                settings: function(){\r\n                    var json = JSON.stringify({\r\n                        settings: [\r\n                            \"result_profile\",\r\n                            \"result_discipline\",\r\n                            \"result_group\",\r\n                            \"result_test\"\r\n                        ]\r\n                    });\r\n                    $ajaxpost({\r\n                        url: '/api/uisettings/get',\r\n                        data: json,\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.settings(data);\r\n                            self.get.profiles();\r\n                        },\r\n                        errorCallback: function(){\r\n                            self.settings(null);\r\n                            self.get.profiles();\r\n                        }\r\n                    });\r\n                },\r\n                profiles: function(){\r\n                    $ajaxget({\r\n                        url: '/api/profiles',\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.filter.profiles(data());\r\n                            self.settings() ? self.filter.set.profile() : null;\r\n                        }\r\n                    });\r\n                },\r\n                disciplines: function(){\r\n                    $ajaxget({\r\n                        url: '/api/profile/'+ self.filter.profile().id() +'/disciplines',\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.filter.disciplines(data());\r\n                            self.settings() ? self.filter.set.discipline() : null;\r\n                        }\r\n                    });\r\n                },\r\n                groups: function(){\r\n                    $ajaxget({\r\n                        url: '/api/profile/'+ self.filter.profile().id() +'/groups',\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.filter.groups(data());\r\n                            self.settings() ? self.filter.set.group() : null;\r\n                        }\r\n                    });\r\n                },\r\n                tests: function(){\r\n                    $ajaxget({\r\n                        url: '/api/disciplines/' + self.filter.discipline().id()+ '/tests',\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.filter.tests(data());\r\n                            self.settings() ? self.filter.set.test() : null;\r\n                        }\r\n                    });\r\n                },\r\n                results: function(){\r\n                    var group = self.filter.group();\r\n                    var test = self.filter.test();\r\n                    var discipline = self.filter.discipline();\r\n\r\n                    if(!discipline) return;\r\n\r\n                    if (!group){\r\n                        group = {\r\n                            id : function(){ return 0;}\r\n                        }\r\n                    }\r\n\r\n                    if(!test){\r\n                        test = {\r\n                            id : function(){ return 0;}\r\n                        }\r\n                    }\r\n\r\n                    $ajaxget({\r\n                        url: '/api/results/show?groupId='+ group.id()\r\n                                             + '&testId=' + test.id()\r\n                                             + '&disciplineId=' + discipline.id(),\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.current.results(data());\r\n                        }\r\n                    });\r\n                },\r\n                markScale: function(){\r\n                    $ajaxget({\r\n                        url: '/api/settings/get/maxMarkValue',\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.current.markScale(data.value());\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n            self.post = {\r\n                settings: function(settings){\r\n                    $ajaxpost({\r\n                        url: '/api/uisettings/set',\r\n                        errors: self.errors,\r\n                        data: JSON.stringify({settings: settings})\r\n                    });\r\n                }\r\n            };\r\n\r\n            self.get.settings();\r\n            self.get.markScale();\r\n\r\n            //SUBSCRIPTIONS\r\n\r\n            self.filter.profile.subscribe(function(value){\r\n                if (value){\r\n                    self.post.settings({'result_profile': self.filter.profile().id()});\r\n                    self.get.groups();\r\n                    self.get.disciplines();\r\n                    return;\r\n                }\r\n                self.filter\r\n                    .disciplines([])\r\n                    .groups([]);\r\n                self.post.settings({'result_profile': null});\r\n            });\r\n            self.filter.discipline.subscribe(function(value){\r\n                if (value){\r\n                    self.post.settings({'result_discipline': self.filter.discipline().id()});\r\n                    self.get.tests();\r\n                    return;\r\n                }\r\n                self.filter.tests([]);\r\n                self.post.settings({'result_discipline': null});\r\n            });\r\n            self.filter.group.subscribe(function(value){\r\n                if (value){\r\n                    self.post.settings({'result_group': self.filter.group().id()});\r\n                    self.get.results();\r\n                    return;\r\n                }\r\n                self.post.settings({'result_group': null});\r\n                self.get.results();\r\n            });\r\n            self.filter.test.subscribe(function(value){\r\n                if (value){\r\n                    self.post.settings({'result_test': self.filter.test().id()});\r\n                    self.get.results();\r\n                    return;\r\n                }\r\n                self.current.results([]);\r\n                self.post.settings({'result_test': null});\r\n                self.get.results();\r\n            });\r\n\r\n\r\n            return returnStandart.call(self);\r\n        };\r\n    };\r\n\r\n    ko.applyBindings(resultsViewModel());\r\n});"]}