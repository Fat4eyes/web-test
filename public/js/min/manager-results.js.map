{"version":3,"sources":["results.js"],"names":[],"mappingsfile":"manager-results.js","sourcesContent":["$(document).ready(function(){\n    var resultsViewModel = function(){\n        return new function(){\n            var self = this;\n\n            initializeViewModel.call(self, {\n                page: menu.admin.results\n            });\n\n            self.theme = ko.observable({});\n            self.settings = ko.observable(null);\n\n            self.current = {\n                results: ko.observableArray([]),\n                markScale: ko.observable(100)\n            };\n            self.filter = {\n                profile: ko.observable(),\n                discipline: ko.observable(),\n                group: ko.observable(),\n                test: ko.observable(),\n\n                profiles: ko.observableArray([]),\n                disciplines: ko.observableArray([]),\n                groups: ko.observableArray([]),\n                tests: ko.observableArray([]),\n\n                set: {\n                    profile: function(){\n                        var id = self.settings().result_profile;\n                        if (!id) return;\n                        $.each(self.filter.profiles(), function(i, item){\n                            if (item.id() == id()){\n                                self.filter.profile(item);\n                            }\n                        });\n                    },\n                    discipline: function(){\n                        var id = self.settings().result_discipline;\n                        if (!id) return;\n                        $.each(self.filter.disciplines(), function(i, item){\n                            if (item.id() == id()){\n                                self.filter.discipline(item);\n                            }\n                        });\n                    },\n                    group: function(id){\n                        var id = id || self.settings().result_group;\n                        if (!id) return;\n                        $.each(self.filter.groups(), function(i, item){\n                            if (item.id() == id()){\n                                self.filter.group(item);\n                            }\n                        });\n                    },\n                    test: function(){\n                        var id = self.settings().result_test;\n                        if (!id) return;\n                        $.each(self.filter.tests(), function(i, item){\n                            if (item.id() == id()){\n                                self.filter.test(item);\n                            }\n                        });\n                    }\n                },\n                clear: function(){\n                    self.filter.profile() ? self.filter.profile(null) : null;\n                    self.filter.group() ? self.filter.group(null) : null;\n                    self.filter.discipline() ? self.filter.discipline(null) : null;\n                    self.filter.test() ? self.filter.test(null) : null;\n                    self.settings(null);\n                }\n            };\n\n\n            self.actions = {\n                show: function(data){\n                    window.location.href = '/admin/result/' + data.id();\n                },\n                overall: function(){\n\n                    self.filter.profile() ? self.post.settings({'overall_profile': self.filter.profile().id()}) : null;\n                    self.filter.discipline() ? self.post.settings({'overall_discipline': self.filter.discipline().id()}): null;\n                    self.filter.group() ? self.post.settings({'overall_group': self.filter.group().id()}) : null;\n                    window.location.href = '/admin/overallresults';\n                }\n            };\n\n            self.get = {\n                settings: function(){\n                    var json = JSON.stringify({\n                        settings: [\n                            \"result_profile\",\n                            \"result_discipline\",\n                            \"result_group\",\n                            \"result_test\"\n                        ]\n                    });\n                    $ajaxpost({\n                        url: '/api/uisettings/get',\n                        data: json,\n                        errors: self.errors,\n                        successCallback: function(data){\n                            self.settings(data);\n                            self.get.profiles();\n                        },\n                        errorCallback: function(){\n                            self.settings(null);\n                            self.get.profiles();\n                        }\n                    });\n                },\n                profiles: function(){\n                    $ajaxget({\n                        url: '/api/profiles',\n                        errors: self.errors,\n                        successCallback: function(data){\n                            self.filter.profiles(data());\n                            self.settings() ? self.filter.set.profile() : null;\n                        }\n                    });\n                },\n                disciplines: function(){\n                    $ajaxget({\n                        url: '/api/profile/'+ self.filter.profile().id() +'/disciplines',\n                        errors: self.errors,\n                        successCallback: function(data){\n                            self.filter.disciplines(data());\n                            self.settings() ? self.filter.set.discipline() : null;\n                        }\n                    });\n                },\n                groups: function(){\n                    $ajaxget({\n                        url: '/api/profile/'+ self.filter.profile().id() +'/groups',\n                        errors: self.errors,\n                        successCallback: function(data){\n                            self.filter.groups(data());\n                            self.settings() ? self.filter.set.group() : null;\n                        }\n                    });\n                },\n                tests: function(){\n                    $ajaxget({\n                        url: '/api/disciplines/' + self.filter.discipline().id()+ '/tests',\n                        errors: self.errors,\n                        successCallback: function(data){\n                            self.filter.tests(data());\n                            self.settings() ? self.filter.set.test() : null;\n                        }\n                    });\n                },\n                results: function(){\n                    var group = self.filter.group();\n                    var test = self.filter.test();\n                    var discipline = self.filter.discipline();\n\n                    if(!discipline) return;\n\n                    if (!group){\n                        group = {\n                            id : function(){ return 0;}\n                        }\n                    }\n\n                    if(!test){\n                        test = {\n                            id : function(){ return 0;}\n                        }\n                    }\n\n                    $ajaxget({\n                        url: '/api/results/show?groupId='+ group.id()\n                                             + '&testId=' + test.id()\n                                             + '&disciplineId=' + discipline.id(),\n                        errors: self.errors,\n                        successCallback: function(data){\n                            self.current.results(data());\n                        }\n                    });\n                },\n                markScale: function(){\n                    $ajaxget({\n                        url: '/api/settings/get/maxMarkValue',\n                        errors: self.errors,\n                        successCallback: function(data){\n                            self.current.markScale(data.value());\n                        }\n                    });\n                }\n            };\n            self.post = {\n                settings: function(settings){\n                    $ajaxpost({\n                        url: '/api/uisettings/set',\n                        errors: self.errors,\n                        data: JSON.stringify({settings: settings})\n                    });\n                }\n            };\n\n            self.get.settings();\n            self.get.markScale();\n\n            //SUBSCRIPTIONS\n\n            self.filter.profile.subscribe(function(value){\n                if (value){\n                    self.post.settings({'result_profile': self.filter.profile().id()});\n                    self.get.groups();\n                    self.get.disciplines();\n                    return;\n                }\n                self.filter\n                    .disciplines([])\n                    .groups([]);\n                self.post.settings({'result_profile': null});\n            });\n            self.filter.discipline.subscribe(function(value){\n                if (value){\n                    self.post.settings({'result_discipline': self.filter.discipline().id()});\n                    self.get.tests();\n                    return;\n                }\n                self.filter.tests([]);\n                self.post.settings({'result_discipline': null});\n            });\n            self.filter.group.subscribe(function(value){\n                if (value){\n                    self.post.settings({'result_group': self.filter.group().id()});\n                    self.get.results();\n                    return;\n                }\n                self.post.settings({'result_group': null});\n                self.get.results();\n            });\n            self.filter.test.subscribe(function(value){\n                if (value){\n                    self.post.settings({'result_test': self.filter.test().id()});\n                    self.get.results();\n                    return;\n                }\n                self.current.results([]);\n                self.post.settings({'result_test': null});\n                self.get.results();\n            });\n\n\n            return returnStandart.call(self);\n        };\n    };\n\n    ko.applyBindings(resultsViewModel());\n});"]}