{"version":3,"sources":["register.js"],"names":[],"mappingsfile":"register.js","sourcesContent":["//var doubleNameRegex = '^[А-ЯЁ][а-яё]+(\\-{1}(?:[А-ЯЁ]{1}(?:[а-яё]+)))?$';\n$(document).ready(function(){\n\n    ko.validation.init({\n        messagesOnModified: true,\n        insertMessages: false\n    });\n\n    var registerViewModel = function(){\n        return new function(){\n            var self = this;\n\n            self.errors = modals('errors');\n            self.validation = {};\n            self.events = new validationEvents(self.validation);\n\n            self.user = ko.validatedObservable({\n                lastname: ko.observable().extend({\n                    required: true,\n                    pattern: '^[А-ЯЁ][а-яё]+(\\-{1}(?:[А-ЯЁ]{1}(?:[а-яё]+)))?$',\n                    maxLength: 80\n                }),\n                firstname:  ko.observable().extend({\n                    required: true,\n                    pattern: '^[А-ЯЁ][а-яё]+(\\-{1}(?:[А-ЯЁ]{1}(?:[а-яё]+)))?$',\n                    maxLength: 80\n                }),\n                patronymic: ko.observable().extend({\n                    pattern: '^[А-ЯЁ][а-яё]+(\\-{1}(?:[А-ЯЁ]{1}(?:[а-яё]+)))?$',\n                    maxLength: 80\n                }),\n                email: ko.observable().extend({\n                    required: true,\n                    email: true\n                }),\n                password: ko.observable().extend({\n                    required: true,\n                    minLength: 6,\n                    maxLength: 16\n                }),\n                group: ko.observable().extend({\n                    required: true\n                })\n            });\n            self.groups = ko.observableArray([]);\n            self.registerResult = {\n                success: ko.observable(),\n                message: ko.observable('')\n            };\n\n            self.register = function(){\n                var user = ko.mapping.toJS(self.user);\n                delete user.group;\n\n                var json = JSON.stringify({\n                    user: user,\n                    groupId: self.user().group().id()\n                });\n\n                $ajaxpost({\n                    url: '/register',\n                    data: json,\n                    errors: self.errors,\n                    successCallback: function(data){\n                        self.registerResult\n                            .success(true)\n                            .message(data());\n                        commonHelper.modal.open('#register-info');\n                    },\n                    errorCallback: function(data){\n                        self.registerResult\n                            .success(false)\n                            .message(data());\n                    }\n                });\n            };\n\n            self.check = {\n                user: function(){\n                    if (!self.user.isValid()){\n                        self.events.showTooltip.overall();\n                        if (!self.user().group.isValid()){\n                            self.events.showTooltip.group();\n                            return false;\n                        }\n                        return false;\n                    }\n                    self.events.closeTooltip.overall();\n                    return true;\n                }\n            };\n            self.get = {\n                groups: function(){\n                    $ajaxget({\n                        url: 'api/groups/',\n                        errors: self.errors,\n                        successCallback: function(data){\n                            self.groups(data());\n                        }\n                    });\n                }\n            };\n\n            self.acceptInformation = function(){\n                commonHelper.modal.close('register-info');\n                if (self.registerResult.success()){\n                    window.location.href = '/login';\n                }\n            };\n\n            self.get.groups();\n            commonHelper.buildValidationList(self.validation);\n\n            return {\n                user: self.user,\n                register: self.register,\n                registerResult: self.registerResult,\n                acceptInformation: self.acceptInformation,\n                groups: self.groups,\n                events: self.events,\n                errors: self.errors\n            };\n        };\n    };\n\n    ko.applyBindings(registerViewModel());\n});"]}