{"version":3,"sources":["register.js"],"names":[],"mappingsfile":"register.js","sourcesContent":["//var doubleNameRegex = '^[А-ЯЁ][а-яё]+(\\-{1}(?:[А-ЯЁ]{1}(?:[а-яё]+)))?$';\r\n$(document).ready(function(){\r\n\r\n    ko.validation.init({\r\n        messagesOnModified: true,\r\n        insertMessages: false\r\n    });\r\n\r\n    var registerViewModel = function(){\r\n        return new function(){\r\n            var self = this;\r\n\r\n            self.errors = modals('errors');\r\n            self.validation = {};\r\n            self.events = new validationEvents(self.validation);\r\n\r\n            self.user = ko.validatedObservable({\r\n                lastname: ko.observable().extend({\r\n                    required: true,\r\n                    pattern: '^[А-ЯЁ][а-яё]+(\\-{1}(?:[А-ЯЁ]{1}(?:[а-яё]+)))?$',\r\n                    maxLength: 80\r\n                }),\r\n                firstname:  ko.observable().extend({\r\n                    required: true,\r\n                    pattern: '^[А-ЯЁ][а-яё]+(\\-{1}(?:[А-ЯЁ]{1}(?:[а-яё]+)))?$',\r\n                    maxLength: 80\r\n                }),\r\n                patronymic: ko.observable().extend({\r\n                    pattern: '^[А-ЯЁ][а-яё]+(\\-{1}(?:[А-ЯЁ]{1}(?:[а-яё]+)))?$',\r\n                    maxLength: 80\r\n                }),\r\n                email: ko.observable().extend({\r\n                    required: true,\r\n                    email: true\r\n                }),\r\n                password: ko.observable().extend({\r\n                    required: true,\r\n                    minLength: 6,\r\n                    maxLength: 16\r\n                }),\r\n                group: ko.observable().extend({\r\n                    required: true\r\n                })\r\n            });\r\n            self.groups = ko.observableArray([]);\r\n            self.registerResult = {\r\n                success: ko.observable(),\r\n                message: ko.observable('')\r\n            };\r\n\r\n            self.register = function(){\r\n                var user = ko.mapping.toJS(self.user);\r\n                delete user.group;\r\n\r\n                var json = JSON.stringify({\r\n                    user: user,\r\n                    groupId: self.user().group().id()\r\n                });\r\n\r\n                $ajaxpost({\r\n                    url: '/register',\r\n                    data: json,\r\n                    errors: self.errors,\r\n                    successCallback: function(data){\r\n                        self.registerResult\r\n                            .success(true)\r\n                            .message(data());\r\n                        commonHelper.modal.open('#register-info');\r\n                    },\r\n                    errorCallback: function(data){\r\n                        self.registerResult\r\n                            .success(false)\r\n                            .message(data());\r\n                    }\r\n                });\r\n            };\r\n\r\n            self.check = {\r\n                user: function(){\r\n                    if (!self.user.isValid()){\r\n                        self.events.showTooltip.overall();\r\n                        if (!self.user().group.isValid()){\r\n                            self.events.showTooltip.group();\r\n                            return false;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    self.events.closeTooltip.overall();\r\n                    return true;\r\n                }\r\n            };\r\n            self.get = {\r\n                groups: function(){\r\n                    $ajaxget({\r\n                        url: 'api/groups/',\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.groups(data());\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n            self.acceptInformation = function(){\r\n                commonHelper.modal.close('register-info');\r\n                if (self.registerResult.success()){\r\n                    window.location.href = '/login';\r\n                }\r\n            };\r\n\r\n            self.get.groups();\r\n            commonHelper.buildValidationList(self.validation);\r\n\r\n            return {\r\n                user: self.user,\r\n                register: self.register,\r\n                registerResult: self.registerResult,\r\n                acceptInformation: self.acceptInformation,\r\n                groups: self.groups,\r\n                events: self.events,\r\n                errors: self.errors\r\n            };\r\n        };\r\n    };\r\n\r\n    ko.applyBindings(registerViewModel());\r\n});"]}