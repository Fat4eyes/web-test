{"version":3,"sources":["home.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"student-home.js","sourcesContent":["$(document).ready(function(){\n    var homeViewModel = function(){\n        return new function(){\n            var self = this;\n            initializeViewModel.call(self, {page: menu.student.main});\n\n            self.initial = {\n                disciplines: ko.observableArray([])\n            };\n            self.filter = {\n                name: ko.observable(''),\n                type: ko.observable(testStatus.all),\n                clear: function(){\n                    self.filter.name('')\n                        .type(testStatus.all);\n                }\n            };\n            self.current = {\n                user: ko.observable(),\n                disciplines: ko.computed(function() {\n                    var initial = self.initial.disciplines();\n                    var name = self.filter.name().toLowerCase();\n                    return ko.utils.arrayFilter(initial, function(item) {\n                        var type = false;\n                        switch(self.filter.type()){\n                            case testStatus.all:\n                                type = true;\n                                break;\n                            case testStatus.left:\n                                type = (item.testsCount() - item.testsPassed()) > 0;\n                                break;\n                            case testStatus.none:\n                                type = (item.testsCount() - item.testsPassed()) === 0;\n                        }\n                        return type &&\n                            (item.discipline.name().toLowerCase().includes(name) ||\n                            item.discipline.abbreviation().toLowerCase().includes(name));\n                    });\n                })\n            };\n\n            self.actions = {\n                details: function(data){\n                    window.location.href = '/discipline/' + data.discipline.id();\n                },\n                percentage: function(data){\n                    var percent = data.testsPassed() /  data.testsCount() * 100;\n                    return ko.observable(percent);\n                }\n            };\n            self.get = {\n                disciplines: function(){\n                    $ajaxget({\n                        url: '/api/disciplines/actual',\n                        errors: self.errors,\n                        successCallback: function(data){\n                            self.initial.disciplines(data());\n                        }\n                    });\n                }\n            };\n            self.get.disciplines();\n\n            return returnStandart.call(self);\n        };\n    };\n\n    ko.applyBindings(homeViewModel());\n});"],"sourceRoot":"/source/"}