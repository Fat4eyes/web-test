{"version":3,"sources":["home.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"student-home.js","sourcesContent":["$(document).ready(function(){\r\n    var homeViewModel = function(){\r\n        return new function(){\r\n            var self = this;\r\n            initializeViewModel.call(self, {page: menu.student.main});\r\n\r\n            self.initial = {\r\n                disciplines: ko.observableArray([])\r\n            };\r\n            self.filter = {\r\n                name: ko.observable(''),\r\n                type: ko.observable(testStatus.all),\r\n                clear: function(){\r\n                    self.filter.name('')\r\n                        .type(testStatus.all);\r\n                }\r\n            };\r\n            self.current = {\r\n                user: ko.observable(),\r\n                disciplines: ko.computed(function() {\r\n                    var initial = self.initial.disciplines();\r\n                    var name = self.filter.name().toLowerCase();\r\n                    return ko.utils.arrayFilter(initial, function(item) {\r\n                        var type = false;\r\n                        switch(self.filter.type()){\r\n                            case testStatus.all:\r\n                                type = true;\r\n                                break;\r\n                            case testStatus.left:\r\n                                type = (item.testsCount() - item.testsPassed()) > 0;\r\n                                break;\r\n                            case testStatus.none:\r\n                                type = (item.testsCount() - item.testsPassed()) === 0;\r\n                        }\r\n                        return type &&\r\n                            (item.discipline.name().toLowerCase().includes(name) ||\r\n                            item.discipline.abbreviation().toLowerCase().includes(name));\r\n                    });\r\n                })\r\n            };\r\n\r\n            self.actions = {\r\n                details: function(data){\r\n                    window.location.href = '/discipline/' + data.discipline.id();\r\n                },\r\n                percentage: function(data){\r\n                    var percent = data.testsPassed() /  data.testsCount() * 100;\r\n                    return ko.observable(percent);\r\n                }\r\n            };\r\n            self.get = {\r\n                disciplines: function(){\r\n                    $ajaxget({\r\n                        url: '/api/disciplines/actual',\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.initial.disciplines(data());\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n            self.get.disciplines();\r\n\r\n            return returnStandart.call(self);\r\n        };\r\n    };\r\n\r\n    ko.applyBindings(homeViewModel());\r\n});"]}