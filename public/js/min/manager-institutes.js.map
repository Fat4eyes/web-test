{"version":3,"sources":["institutes.js"],"names":[],"mappingsfile":"manager-institutes.js","sourcesContent":["$(document).ready(function(){\r\n    var institutesViewModel = function(){\r\n        return new function(){\r\n            var self = this;\r\n            initializeViewModel.call(self, {\r\n                page: menu.admin.main\r\n            });\r\n\r\n            self.initial = {\r\n                institutes: ko.observableArray([]),\r\n                institute: {\r\n                    id: ko.observable(0),\r\n                    name: ko.observable(''),\r\n                    description: ko.observable('')\r\n                }\r\n            };\r\n            self.current = {\r\n                institute: ko.observable(self.initial.institute),\r\n                profiles: ko.observableArray([]),\r\n                profileId: ko.observable(null),\r\n                plans: ko.observableArray([]),\r\n                plan: {\r\n                    name: ko.observable(''),\r\n                    mode: ko.observable(state.none)\r\n                }\r\n            };\r\n            self.actions = {\r\n                show: {\r\n                    institute: function(data){\r\n                        var isCurrent =  data.id() === self.current.institute().id();\r\n                        if (isCurrent) {\r\n                            self.current.institute(self.initial.institute);\r\n                            return;\r\n                        }\r\n                        self.current.institute.copy(data);\r\n                        self.get.profiles();\r\n                    },\r\n                    plans: function(data){\r\n                        self.current.profileId(data.id());\r\n                        self.get.plans();\r\n                        commonHelper.modal.open('#show-plans-modal');\r\n                    }\r\n                },\r\n                moveTo: {\r\n                    group: function(data){\r\n                        var url = '/admin/groups/' + data.id();\r\n                        window.location.href = url;\r\n                    },\r\n                    plan: function(data){\r\n                        window.location.href = '/admin/studyplan/' + data.id();\r\n                    }\r\n                },\r\n                plan: {\r\n                    create: function(){\r\n                        self.actions.plan.cancel();\r\n                        self.current.plan.mode(state.create);\r\n                    },\r\n                    cancel: function(){\r\n                        self.current.plan.name('');\r\n                        self.current.plan.mode(state.none);\r\n                    },\r\n                    approve: function(){\r\n                        if (!self.current.plan.name()) return;\r\n                        self.post.plan();\r\n                    }\r\n                }\r\n            };\r\n            self.get = {\r\n                institutes: function(){\r\n                    var requestOptions = {\r\n                        url: '/api/institutes',\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.initial.institutes(data());\r\n                        }\r\n                    };\r\n                    $ajaxget(requestOptions);\r\n                },\r\n                profiles: function(){\r\n                    var requestOptions = {\r\n                        url: '/api/institute/'+ self.current.institute().id() + '/profiles',\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.current.profiles(data());\r\n                        }\r\n                    };\r\n                    $ajaxget(requestOptions);\r\n                },\r\n                plans: function(){\r\n                    var requestOptions = {\r\n                        url: '/api/profile/'+ self.current.profileId() + '/plans',\r\n                        errors: self.errors,\r\n                        successCallback: function(data){\r\n                            self.current.plans(data());\r\n                        }\r\n                    };\r\n                    $ajaxget(requestOptions);\r\n                }\r\n            };\r\n            self.post = {\r\n                plan: function(){\r\n                    var requestOptions = {\r\n                        url: '/api/plan/create',\r\n                        errors: self.errors,\r\n                        data: JSON.stringify({\r\n                            studyPlan: {name: self.current.plan.name()},\r\n                            profileId: self.current.profileId()\r\n                        }),\r\n                        successCallback: function(){\r\n                            self.actions.plan.cancel();\r\n                            self.get.plans()\r\n                        }\r\n                    };\r\n                    $ajaxpost(requestOptions);\r\n                }\r\n            };\r\n\r\n            self.get.institutes();\r\n\r\n            self.events.plan = function(data, e){\r\n                if (e.which === 13)\r\n                    self.actions.plan.approve();\r\n            };\r\n\r\n            return returnStandart.call(self);\r\n        };\r\n    };\r\n    ko.applyBindings(institutesViewModel());\r\n});"]}